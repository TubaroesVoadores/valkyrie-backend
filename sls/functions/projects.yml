CreateProject:
  handler: src/functions/projects/createProject.main
  events:
    - http:
        method: post
        path: projects
        cors: true
        authorizer: aws_iam
  iamRoleStatementsName: ${self:service}-${self:custom.stage}-create-project
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'

DeleteProject:
  handler: src/functions/projects/deleteProject.main
  events:
    - http:
        method: delete
        path: projects/{projectId}
        cors: true
        authorizer: aws_iam
  iamRoleStatementsName: ${self:service}-${self:custom.stage}-delete-project
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'

UpdateProject:
  handler: src/functions/projects/updateProject.main
  events:
    - http:
        method: put
        path: projects/{projectId}
        cors: true
        authorizer: aws_iam
  iamRoleStatementsName: ${self:service}-${self:custom.stage}-update-project
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'

GetProject:
  handler: src/functions/projects/getProject.main
  events:
    - http:
        method: get
        path: projects/{projectId}
        cors: true
        authorizer: aws_iam
  iamRoleStatementsName: ${self:service}-${self:custom.stage}-get-project
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'
  
ListProjects:
  handler: src/functions/projects/listProjects.main
  events:
    - http:
        method: get
        path: projects
        cors: true
        authorizer: aws_iam
  iamRoleStatementsName: ${self:service}-${self:custom.stage}-list-projects
  iamRoleStatements:
    - Effect: Allow
      Action: 
        - dynamodb:*
      Resource: '*'  
